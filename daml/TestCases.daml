module TestCases where

import Grants
import Daml.Script
import ApplicantInfo

test_GrantingProcess : Script (ContractId GrantOpportunityApplications)

test_GrantingProcess = do

   

deloitteAdmin <- allocatePartyWithHint "DeloitteAdmin" (PartyIdHint "DeloitteAdmin")
deloitteApplicant1 <- allocatePartyWithHint "DeloitteApplicant1" (PartyIdHint "DeloitteApplicant1")
deloitteApplicant2 <- allocatePartyWithHint "DeloitteApplicant2" (PartyIdHint "DeloitteApplicant2")
deloitteApplicant3 <- allocatePartyWithHint "DeloitteApplicant3" (PartyIdHint "DeloitteApplicant3")
deloitteApplicant4 <- allocatePartyWithHint "DeloitteApplicant4" (PartyIdHint "DeloitteApplicant4")
deloitteTechnicalReviewer <- allocatePartyWithHint "DeloitteTechnicalReviewer" (PartyIdHint "DeloitteTechnicalReviewer")
deloitteAgency <- allocatePartyWithHint "DeloitteAgency" (PartyIdHint "DeloitteAgency")
deloittefunder <- allocatePartyWithHint "DeloitteFunder"  (PartyIdHint "DeloitteFunder")

deloitteadminId <- validateUserId "deloitteadmin"
deloitteApplicantId <- validateUserId "deloitteapplicant1"
deloitteApplicant2Id <- validateUserId "deloitteapplicant2"
deloitteApplicant3Id <- validateUserId "deloitteapplicant3"
deloitteApplicant4Id <- validateUserId "deloitteapplicant4"
deloitteTechnicalReviewerId <- validateUserId "deloittetechnicalreviewer"
deloitteAgencyId <- validateUserId "deloitteagency"
deloitteFunderId <- validateUserId "deloittefunder"

createUser (User deloitteadminId (Some deloitteAdmin)) [CanActAs deloitteAdmin]
createUser (User deloitteApplicantId (Some deloitteApplicant1)) [CanActAs deloitteApplicant1]
createUser (User deloitteApplicant2Id (Some deloitteApplicant2)) [CanActAs deloitteApplicant2]
createUser (User deloitteApplicant3Id (Some deloitteApplicant3)) [CanActAs deloitteApplicant3]
createUser (User deloitteApplicant4Id (Some deloitteApplicant4)) [CanActAs deloitteApplicant4]
createUser (User deloitteTechnicalReviewerId (Some deloitteTechnicalReviewer)) [CanActAs deloitteTechnicalReviewer]
createUser (User deloitteAgencyId (Some deloitteAgency)) [CanActAs deloitteAgency]
createUser (User deloitteFunderId (Some deloittefunder)) [CanActAs deloittefunder]


  
applicantData1 <- submit deloitteAdmin do
    createCmd Applicant
      with  
        administrator = deloitteAdmin
        applicant = deloitteApplicant1  

submit deloitteApplicant1 do
    exerciseCmd applicantData1 CreateApplicantInfo
      with
          applicantOrgnization= "Jija Org"
          contact = "8765432567"
          projectTitle = "test project1"
          totalProjectBudget = 5000.00          
          preScreeningResults = True
       
--deloitteApplicant2 <- allocateParty "DeloitteApplicant2"
  
applicantData2 <- submit deloitteAdmin do
    createCmd Applicant
      with  
        administrator = deloitteAdmin
        applicant = deloitteApplicant2  

submit deloitteApplicant2 do
    exerciseCmd applicantData2 CreateApplicantInfo
      with
          applicantOrgnization= "Sophee Org"
          contact = "9876567654"
          projectTitle = "test project2"
          totalProjectBudget = 2000.00          
          preScreeningResults = True

-- deloitteApplicant3 <- allocateParty "DeloitteApplicant3"
  
applicantData3 <- submit deloitteAdmin do
    createCmd Applicant
      with  
        administrator = deloitteAdmin
        applicant = deloitteApplicant3  

submit deloitteApplicant3 do
    exerciseCmd applicantData3 CreateApplicantInfo
      with
          applicantOrgnization= "Narendra Org"
          contact = "7787654344"
          projectTitle = "test project3"
          totalProjectBudget = 120000.00          
          preScreeningResults = True       

agency1 <- submit deloitteAdmin do 
  createCmd GrantingAgency 
    with 
      administrator = deloitteAdmin 
      grantingAgency = deloitteAgency

submit deloitteAgency do 
  exerciseCmd agency1 CreateGrant 
    with 
      title = "Opportunity1"                    
      typeOfGrant= "Type1"
      description= "Test Opportunity1"
      totalAmount= 500000.00
      contact= "9876543298"
      email= "abc@gmail.com"
      status="New"
      grantFunder=deloittefunder

-- deloitteTechnicalReviewer <- allocateParty"DeloitteTechnicalReviewer"
let 
  var_opportunity1 = GrantOpportunity with
      title = "Opportunity1"                    
      typeOfGrant= "Type1"
      description= "Test Opportunity1"
      totalAmount= 100000.00
      contact= "9876543298"
      email= "abc@gmail.com"
      status="New"
      grantFunder=deloittefunder
      grantingAgency=deloitteAgency
      administrator=deloitteAdmin
let
    applicantJija = GranteeApplication with
          applicantOrgnization= "Jija Org"
          contact = "8765432567"
          projectTitle = "test project1"
          totalProjectBudget = 5000.00          
          preScreeningResults = True
          applicant=deloitteApplicant1
          administrator=deloitteAdmin       

grantOppApplication <- submit deloitteAgency do
  createCmd GrantOpportunityApplications
    with
      grantOpportunity =var_opportunity1
      granteeApplicationList =[applicantJija]
      technicalReviewer=deloitteTechnicalReviewer
      granteeApplicationPassedList = []
      granteeApplicationAwarded = applicantJija -- update script to include rveiw and award logic
      
let
    applicantSophee = GranteeApplication with
      applicant = deloitteApplicant2
      applicantOrgnization= "Sophee Org"
      contact = "9876567654"
      projectTitle = "test project2"
      totalProjectBudget = 2000.00          
      preScreeningResults = True
      administrator=deloitteAdmin

grantOppApplication1 <- submit deloitteAgency do
  exerciseCmd grantOppApplication AppendApplications
    with
      granteeApplication=[applicantSophee] 

finalgrantOppApplication1 <- submit deloitteTechnicalReviewer do
  exerciseCmd grantOppApplication1 ReviewApplications
    with

submit deloitteAgency do
  exerciseCmd finalgrantOppApplication1 AwardApplications
    with