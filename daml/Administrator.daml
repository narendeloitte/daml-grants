module Administrator where 

import Grants
import DA.Date
import Daml.Script


template GrantingAgency 
  with 
    administrator: Party 
    grantingAgency: Party 
  where 
    signatory administrator 
    observer grantingAgency
    ensure administrator /= grantingAgency

    key (administrator, grantingAgency): (Party, Party)
    maintainer key._1

    nonconsuming choice CreateGrant : ContractId GrantOpportunity 
        with
            title: Text        
            typeOfGrant: Text
            description: Text
            totalAmount: Numeric 2
            contact: Text
            email: Text
                        
        controller grantingAgency
            do
            nowTime <- getTime
            create GrantOpportunity 
                    with 
                    status = "New"
                    postedDate = toDateUTC nowTime 
                    closingDate = addDays (toDateUTC nowTime) 30
                    grantFunder = grantingAgency
                    ..

    choice RevokeAccessGrantingAgency : () with
     controller administrator
        do return()
          
template GrantingAgencyAccessRequest 
  with 
    administrator: Party 
    grantingAgency: Party 
    reason: Text
  where 
    signatory grantingAgency 
    key (administrator, grantingAgency): (Party, Party)
    maintainer key._2
    ensure administrator /= grantingAgency

    choice GrantGrantingAgencyAccess : ContractId GrantingAgency with
     controller administrator
        do
        create GrantingAgency with ..

    choice RejectGrantingAgencyAccess : () with
     controller administrator
        do return ()
          


template GrantFunder 
  with 
    administrator: Party 
    grantFunder: Party 

  where 
    signatory administrator 
    observer grantFunder
    ensure administrator /= grantFunder 

    key (administrator, grantFunder): (Party, Party)
    maintainer key._1


    choice RevokeAccessGrantFunder : () with
     controller administrator
        do return()
          
template GrantFunderAccessRequest 
  with 
    administrator: Party 
    grantFunder: Party 
    reason: Text
  where 
    signatory grantFunder 
    key (administrator, grantFunder): (Party, Party)
    maintainer key._2
    ensure administrator /= grantFunder

    choice GrantGrantFunderAccess : ContractId GrantFunder with
     controller administrator
        do
        create GrantFunder with ..

    choice RejectGrantFunderAccess : () with
     controller administrator
        do return ()
          


template TechnicalReviewer
  with
    administrator: Party 
    technicalReviewer: Party
  where
    signatory administrator
    observer technicalReviewer
    ensure administrator /= technicalReviewer 

    key (administrator, technicalReviewer): (Party, Party)
    maintainer key._1

    choice RevokeAccessTechnicalReviewer : () 
     controller administrator
        do
         return ()

    
template TechnicalReviewerAcccessRequest
  with
     administrator: Party 
     technicalReviewer: Party
     reason: Text
  where
    signatory technicalReviewer
    observer administrator
    
    key (administrator, technicalReviewer): (Party, Party)
    maintainer key._2
    ensure administrator /= technicalReviewer

    choice GrantTechnicalReviewerAccess : ContractId TechnicalReviewer with
     controller administrator
        do
        create TechnicalReviewer with ..

    choice RejectTechnicalReviewerAccess : () with
     controller administrator
        do return ()


setup : Script (ContractId GrantOpportunity)
setup = do

    alice <- allocateParty "Alice"
    administrator <- allocateParty "Bob"   


    aliceAgency <- submit administrator do 
        createCmd GrantingAgency 
          with 
            administrator = administrator 
            grantingAgency = alice 

    submit alice do 
      exerciseCmd aliceAgency CreateGrant 
        with 
            title = "Opportunity1"                    
            typeOfGrant= "Typ1"
            description= "Test Opportunity1"
            totalAmount= 100000.00
            contact= "9876543298"
            email= "abc@gmail.com"


technicalReviewerTest = do
    tr <- allocateParty "Sam"
    administrator <- allocateParty "Bob"

    trRequest <- submit tr do
      createCmd TechnicalReviewerAcccessRequest with
        administrator = administrator
        technicalReviewer = tr
        reason = "Technical Reviewing of Grants"

    approvedTR <- submit administrator do
      exerciseCmd trRequest GrantTechnicalReviewerAccess
    
    submitMustFail administrator do
      exerciseCmd trRequest  RejectTechnicalReviewerAccess


    pure () 
 
