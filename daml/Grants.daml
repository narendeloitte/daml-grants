module Grants where    

import Daml.Script
import ApplicantInfo


type GrantOpportunityId = ContractId GrantOpportunity

template GrantingAgency 
  with 
    administrator: Party 
    grantingAgency: Party 
  where 
    signatory administrator 
    observer grantingAgency
    ensure administrator /= grantingAgency

    key (administrator, grantingAgency): (Party, Party)
    maintainer key._1

    nonconsuming choice CreateGrant : (ContractId GrantOpportunity )
      with
        title: Text                
        typeOfGrant: Text
        description: Text
        totalAmount: Numeric 2        
        status: Text        
        contact: Text
        email: Text        
        grantFunder: Party
        applicantList:[GranteeApplication]  
        --awardedTo: GranteeApplication          
      controller grantingAgency
        do create GrantOpportunity with ..

-- template GrantApplication
--     with
--         applicant: Party
--         opportunity: GrantOpportunity
--         grantingAgency: Party
--     where
--       signatory applicant, grantingAgency

--       choice SubmitApplication : ContractId GrantOpportunity
--             with
--                 granteeApplication: [GranteeApplication]
--         --BPA - is the controller for here supposed to be grantingAgency? 
--         --How does the applicant initate an application submission?
--             controller  applicant  
--                 do
--                     let appList = applicantList ++ granteeApplication
--                     --BPA- need a branching code block here think the applicantList is empty by default and need to handle
--                     if applicantList == [] 
--                       then create this with 
--                               applicantList = granteeApplication
--                       else create this with 
--                               applicantList = appList

template GrantOpportunity
    with       
        title: Text        
        grantingAgency: Party
        typeOfGrant: Text
        description: Text
        totalAmount: Numeric 2        
        status: Text        
        contact: Text
        email: Text
        administrator: Party 
        grantFunder: Party
        applicantList:[GranteeApplication]
        --awardedTo: GranteeApplication 
    where
        ensure totalAmount > 0.0        
        
        key (grantingAgency, administrator,title): (Party, Party,Text)
        maintainer key._1 

        signatory grantingAgency
        observer  administrator,grantFunder

        nonconsuming choice FundGrant: GrantOpportunityId
            with
                fundAmount: Numeric 2                  
            controller grantFunder, grantingAgency 
                do
                    create this with
                      status = "Funded"
                      totalAmount = fundAmount
                      grantFunder = grantFunder 
        --add choice to add applicant info to applicantList
        --submitApplication controller applicant
        
                              -- TODO: Logic to add elements to the list
                              
        
        -- pick the successful appliction and update the awarded to flag in the grant
        -- choice AwardApplication : ContractId GrantOpportunity
        --   with 
        --     successfulApplication: GranteeApplication
        --   controller  grantingAgency  
        --       do
        --         create this with awardedTo = successfulApplication
        
        choice AcceptApplication : ContractId GrantOpportunity
            with
                granteeApplication: [GranteeApplication]
        --BPA - is the controller for here supposed to be grantingAgency? 
        --How does the applicant initate an application submission?
            controller  grantingAgency  
                do
                    let appList = applicantList ++ granteeApplication
                    --BPA- need a branching code block here think the applicantList is empty by default and need to handle
                    if applicantList == [] 
                      then create this with 
                              applicantList = granteeApplication
                      else create this with 
                              applicantList = appList

        -- remove application > 1.15 estimate
        -- choice ScreenApplications : ContractId GrantOpportunity
        --   with

        --   controller grantingAgency
        --       do
        --         --let appList = filter( where granteeApp.totalBudget > 1.15 * total ammount
        --         --create this with applicantList = appList
        --         ..

        -- choice DoTechnicalReview: GrantOpportunityId
        --     with
        --         agreeOrNot: Text                
        --     controller technicalReviewer 
        --         do
        --             create this with
        --                 technicalReviewDone = agreeOrNot
            

        -- choice DoFinancialReview: GrantOpportunityId
        --     with
        --         agreeOrNot: Text
        --     controller financialReviewer 
        --         do
        --             create this with 
        --                 financialReviewDone = agreeOrNot
--create template to open apps for submission
--will allow an applicant to submit then the choice w/in grantOpp will allow updating the contract               
{-
template AcceptApp
    with
        opportunity: GrantOpportunity
        application: GranteeApplication
    where
        signatory application.applicant
        observer opportunity.grantingAgency 
-}

template Application
  with
    grantOpportunity: GrantOpportunity
    applicantInfo: GranteeApplication

  where
    signatory applicantInfo.applicant
    observer grantOpportunity.grantingAgency

test_Grants : Script (ContractId GrantOpportunity)

test_Grants = do

aliceAgency <- allocateParty "AliceAgency1"
bob <- allocateParty "Bob"    
charlie <- allocateParty "Charlie"        
administrator <- allocateParty "Admin"   
agency <- submit administrator do 
  createCmd GrantingAgency 
    with 
      administrator = administrator 
      grantingAgency = aliceAgency

let
  applicant1= GranteeApplication with
    applicant = bob
    administrator= administrator
    applicantOrgnization= "ABC Org"
    contact = "9876554329"
    projectTitle = "test project"
    totalProjectBudget = 100000.00
    -- Added by Amod: Added the field with value here
    preScreeningResults = False

opportunity1 <- submit aliceAgency do 
  exerciseCmd agency CreateGrant 
    with 
      title = "Opportunity1"                    
      typeOfGrant= "Type1"
      description= "Test Opportunity1"
      totalAmount= 100000.00
      contact= "9876543298"
      email= "abc@gmail.com"
      status="New"
      grantFunder=bob
      applicantList=[]
     -- awardedTo=applicant1

let 
  var_opportunity1 = GrantOpportunity with
    title = "Opportunity1"                    
    typeOfGrant= "Type1"
    description= "Test Opportunity1"
    totalAmount= 100000.00
    contact= "9876543298"
    email= "abc@gmail.com"
    status="New"
    grantFunder=bob
    applicantList=[]
    --awardedTo=applicant1
    grantingAgency=aliceAgency
    administrator=administrator

accept <- submit bob do
    createCmd Application
      with
        grantOpportunity=  var_opportunity1
        applicantInfo= applicant1
        --applicant=bob

submit aliceAgency do 
      exerciseCmd opportunity1 AcceptApplication 
        with
            granteeApplication=[applicant1]
   
  